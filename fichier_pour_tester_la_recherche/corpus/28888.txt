local p local digits ABCDEFGHIJKLMNOPQRSTUVWXYZ function normalizeFullWidthChars return mw ustring gsub return mw ustring char end endfunction convert n n convert to a string strip off any leading x from tonumber if not from or from then local c n c n gsub if c and not from then from end end check for a negative sign Do this while the input is still in string form because tonumber doesn t support negative numbers in non bases local sign local c n c n gsub if c then sign end replace any full width Unicode characters in the string with their ASCII equivalents n normalizeFullWidthChars handle scientific notation with whitespace around the e e g e n n gsub from from or local num tonumber base tonumber precision tonumber width tonumber if not num or not base then return default or n end local i f math modf local t repeat local d i math floor table insert until i 