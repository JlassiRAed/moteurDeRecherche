A greedy algorithm is an algorithm that uses many iterations to compute the result Such algorithms assume that this result will be obtained by selecting the best result at the current iteration In other words the global optimum is obtained by selecting the local optimum at the current time Examples of such algorithms Kruskal s algorithm for finding the minimum spanning tree in a graph Prim s algorithm for finding the minimum spanning tree in a graph Dijkstra s algorithm for finding the shortest path in a graph with non negative edge lengths There are some problems where greedy algorithms do not produce the best possible solution In such cases they often produce the worst possible one Again look at the coin changing example above and imagine that there are coins for cent cent and cent Now imagine that the sum of cent needs to be changed A greedy algorithm would pick cent cent and cent for a total of cent The algorithm is then stuck because the remaining cent cannot be changed One possible way of solving the is to use the cent coin and four coins of cent 